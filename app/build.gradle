plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

apply from: "$rootProject.projectDir/buildsystem/versions.gradle"
def configuration = ext.configuration
def libraries = ext.libraries

android {
    namespace 'com.elkin.challengeinstaleap'
    compileSdk configuration.compileSdk

    defaultConfig {
        applicationId configuration.applicationId
        minSdk configuration.minSdk
        targetSdk configuration.targetSdk
        versionCode configuration.versionCode
        versionName configuration.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$libraries.ktx"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$libraries.lifecycle_runtime"
    implementation "androidx.activity:activity-compose:$libraries.activity_compose"
    implementation "androidx.compose.ui:ui:$libraries.compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$libraries.compose_ui_version"
    implementation "androidx.compose.material:material:$libraries.material"
    implementation "androidx.constraintlayout:constraintlayout-compose:$libraries.constraint_compose"
    testImplementation "junit:junit:$libraries.testImplJunit"
    androidTestImplementation "androidx.test.ext:junit:$libraries.andTestImplJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$libraries.andTestImplEspresso"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$libraries.compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$libraries.compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$libraries.compose_ui_version"

    //Navigation
    implementation "androidx.navigation:navigation-compose:$libraries.navigation"
    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$libraries.lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$libraries.lifecycle_version"
    //Glide
    implementation "com.github.skydoves:landscapist-glide:$libraries.glide"
    //Hilt
    implementation "com.google.dagger:hilt-android:$libraries.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$libraries.hilt"
    implementation "androidx.hilt:hilt-navigation-compose:$libraries.hilt_navigation"
    //OkHttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$libraries.okhttp"))
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$libraries.okhttp_intercept"
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$libraries.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$libraries.retrofit"
}

kapt {
    correctErrorTypes = true
}